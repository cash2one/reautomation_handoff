import logging
logger = logging.getLogger('athenataf')
from athenataf.lib.functionality.test.ConfigurationTest import ConfigurationTest

class ConfigTest(ConfigurationTest):
	'''
	Test class for services test cases of ConfigTest module.
	'''

	def test_ath_9060_airgroup_settings_enable_air_play(self):
		self.take_s1_snapshot()
		services_page = self.LeftPanel.go_to_services()
		services_page.click_on_enable_air_group_checkbox()
		services_page.click_on_enable_air_print_checkbox()
		services_page.edit_air_print_disallowed_role()
 		services_page.edit_air_print_disallowed_vlans_id()
 		services_page.save_settings()
		self.take_s2_snapshot()
		services_page.click_on_enable_air_group_checkbox()
 		services_page.save_settings()			
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(1)
		self.assert_s1_s3_diff()
		self.clear()
		
	def test_ath_9061_airgroup_settings_itunes(self):
		self.take_s1_snapshot()
		services_page = self.LeftPanel.go_to_services()
		services_page.click_on_enable_air_group_checkbox()
		services_page.click_on_itunes_checkbox()
		services_page.edit_itunes_disallowed_role()
 		services_page.edit_itunes_disallowed_vlans_id()
 		services_page.save_settings() 
		self.take_s2_snapshot()
		services_page.click_on_enable_air_group_checkbox()
 		services_page.save_settings()		
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(1)
		self.assert_s1_s3_diff()
		self.clear()
		
	def test_ath_9062_airgroup_settings_remote_management(self):
		self.take_s1_snapshot()
		services_page = self.LeftPanel.go_to_services()
		services_page.click_on_enable_air_group_checkbox()
		services_page.click_on_remote_management()
		services_page.edit_remote_management_disallowed_role()
 		services_page.edit_remote_management_disallowed_vlans_id()
 		services_page.save_settings() 
		self.take_s2_snapshot()
		services_page.click_on_enable_air_group_checkbox()
 		services_page.save_settings()		
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(1)
		self.assert_s1_s3_diff()
		self.clear()
		
	def test_ath_9063_airgroup_settings_sharing(self):
		self.take_s1_snapshot()
		services_page = self.LeftPanel.go_to_services()
		services_page.click_on_enable_air_group_checkbox()
		services_page.click_on_sharing_checkbox()		
		services_page.edit_sharing_disallowed_role()
 		services_page.edit_sharing_disallowed_vlans_id()
 		services_page.save_settings() 
		self.take_s2_snapshot()
		services_page.click_on_enable_air_group_checkbox()
 		services_page.save_settings()		
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(1)
		self.assert_s1_s3_diff()
		self.clear()
		
	def test_ath_9064_airgroup_settings_chat(self):
		self.take_s1_snapshot()
		services_page = self.LeftPanel.go_to_services()
		services_page.click_on_enable_air_group_checkbox()
		services_page.click_on_chat_checkbox()		
		services_page.edit_chat_disallowed_role()
 		services_page.edit_chat_disallowed_vlans_id()
 		services_page.save_settings() 
		self.take_s2_snapshot()
		services_page.click_on_enable_air_group_checkbox()
 		services_page.save_settings()		
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(1)
		self.assert_s1_s3_diff()
		self.clear()
		
	def test_ath_9065_airgroup_settings_allowall(self):
		self.take_s1_snapshot()
		services_page = self.LeftPanel.go_to_services()
		services_page.click_on_enable_air_group_checkbox()
		services_page.click_on_allowall_checkbox()		
		services_page.edit_allowall_disallowed_role()
 		services_page.edit_allowall_disallowed_vlans_id()
 		services_page.save_settings() 
		self.take_s2_snapshot()
		services_page.click_on_enable_air_group_checkbox()
 		services_page.save_settings()		
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(1)
		self.assert_s1_s3_diff()
		self.clear()
		
	def test_ath_9066_rtls_include_unassociated_stations(self):
		self.take_s1_snapshot()
		services_page = self.LeftPanel.go_to_services()
		services_page.click_on_rtls_accordion()
		services_page.enable_include_unassociated_stations()
		self.take_s2_snapshot()
		services_page.click_on_aruba_rtls()
 		services_page.save_settings()		
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(1)
		self.assert_s1_s3_diff()
		self.clear()		
