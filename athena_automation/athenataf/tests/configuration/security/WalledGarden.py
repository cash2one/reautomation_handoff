import logging
logger = logging.getLogger('athenataf')


from athenataf.lib.functionality.test.ConfigurationTest import ConfigurationTest

class WalledGarden(ConfigurationTest):
	'''
		Test class for Walled Garden.
	'''

	def test_ath_1656_configure_whitelist_and_blacklist(self):
		self.take_s1_snapshot()
		security_page = self.LeftPanel.go_to_security() 
		security_page.click_walled_garden_accordion()
		security_page.assert_walled_garden_page()
		security_page.click_walled_garden_link()
		security_page.delete_blacklist_domain()
		security_page.delete_whitelist_domain()
		self.take_s1_snapshot()
		# security_page.assert_walled_garden_link()
		security_page.click_walled_garden_link()
		security_page.create_blacklist_new_domain()
		security_page.create_whitelist_new_domain()
		security_page.click_walled_garden_link()
		# security_page.assert_walled_garden_link()
		security_page.assert_create_blacklist_new_domain()
		security_page.assert_create_whitelist_new_domain()
		self.take_s2_snapshot()
		security_page.delete_blacklist_domain()
		security_page.click_walled_garden_link()
		security_page.delete_whitelist_domain()
		security_page.click_walled_garden_link()
		# security_page.assert_walled_garden_link()
		security_page.assert_delete_blacklist_domain()
		security_page.assert_delete_whitelist_domain()
		security_page.click_walled_cancel()
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(0)
		self.assert_s1_s3_diff()
		self.clear()
		
		
	def test_ath_1664_delete_whitelist_and_blacklist(self):
		security_page = self.LeftPanel.go_to_security() 
		security_page.click_walled_garden_accordion()
		security_page.assert_walled_garden_page()
		security_page.click_walled_garden_link()
		security_page.delete_blacklist_domain()
		security_page.delete_whitelist_domain()
		self.take_s1_snapshot()
		# security_page.assert_walled_garden_link()
		security_page.click_walled_garden_link()
		security_page.create_blacklist_new_domain()
		security_page.create_whitelist_new_domain()
		security_page.click_walled_garden_link()
		# security_page.assert_walled_garden_link()
		security_page.assert_create_blacklist_new_domain()
		security_page.assert_create_whitelist_new_domain()
		self.take_s2_snapshot()
		security_page.delete_blacklist_domain()
		security_page.click_walled_garden_link()
		security_page.delete_whitelist_domain()
		security_page.click_walled_garden_link()
		# security_page.assert_walled_garden_link()
		security_page.assert_delete_blacklist_domain()
		security_page.assert_delete_whitelist_domain()
		security_page.click_walled_cancel()
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(0)
		self.assert_s1_s3_diff()
		self.clear()
		
	def test_ath_1665_edit_whitelist_and_blacklist(self):
		security_page = self.LeftPanel.go_to_security() 
		security_page.click_walled_garden_accordion()
		security_page.assert_walled_garden_page()
		security_page.click_walled_garden_link()
		security_page.delete_blacklist_domain()
		security_page.delete_whitelist_domain()
		self.take_s1_snapshot()
		# security_page.assert_walled_garden_link()
		security_page.click_walled_garden_link()
		security_page.create_blacklist_new_domain()
		security_page.create_whitelist_new_domain()
		security_page.click_walled_garden_link()
		# security_page.assert_walled_garden_link()
		security_page.assert_create_blacklist_new_domain()
		security_page.assert_create_whitelist_new_domain()
		security_page.edit_blacklist_domain()
		security_page.edit_whitelist_domain()
		security_page.click_walled_garden_link()
		# security_page.assert_walled_garden_link()
		security_page.assert_edited_blacklist_domain()
		security_page.assert_edited_whitelist_domain()
		self.take_s2_snapshot()
		security_page.delete_edited_blacklist_domain()
		security_page.click_walled_garden_link()
		security_page.delete_edited_whitelist_domain()
		security_page.click_walled_garden_link()
		# security_page.assert_walled_garden_link()
		security_page.assert_delete_blacklist_domain()
		security_page.assert_delete_whitelist_domain()
		security_page.click_walled_cancel()
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(0)
		self.assert_s1_s3_diff()
		self.clear()