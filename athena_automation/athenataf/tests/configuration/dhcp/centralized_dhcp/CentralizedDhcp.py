import logging
logger = logging.getLogger('athenataf')

from athenataf.lib.functionality.test.ConfigurationTest import ConfigurationTest

class CentralizedDhcp(ConfigurationTest):
	'''
	Test class for DHCP --> Centralized dhcp scopes.
	'''
	def test_ath_11252_delete_centralized_dhcp_scopes(self):
		path = self.config.config_vars
		dhcp_page = self.LeftPanel.go_to_dhcp_page()
		self.take_s1_snapshot()
		dhcp_page.click_centralize_accordion()
		dhcp_page.create_new_centralized_dhcp()
		dhcp_page.setting_centralize_name(path.centralized_dhcp_name)
		dhcp_page.set_centralize_vlan_id(path.vlan_number_value)
		dhcp_page.click_ok()
		dhcp_page.delete_centralized_dhcp()
		dhcp_page.assert_centralized_dhcp()
		dhcp_page.create_new_centralized_dhcp()
		dhcp_page.setting_centralize_name(path.centralized_dhcp_name_special_char)
		dhcp_page.set_centralize_vlan_id(path.vlan_number_value)
		dhcp_page.click_ok()
		self.take_s2_snapshot()
		dhcp_page.delete_centralized_dhcp()
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(0)
		self.assert_s1_s3_diff()
		self.clear()
		
	def test_ath_11249_create_centralized_L3_Scope_40_and_above(self):
		dhcp_page = self.LeftPanel.go_to_dhcp_page()
		dhcp_page.click_centralize_accordion()
		dhcp_page.delete_centralize_dhcp_if_present()
		self.take_s1_snapshot()
		dhcp_page.assert_centralized_L3_scope_40()
		self.take_s2_snapshot()
		dhcp_page.delete_centralize_dhcp_if_present()
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(0)
		self.assert_s1_s3_diff()
		self.clear()
		
	def test_ath_11253_create_centralized_scope_as_dhcp_relay_enabled_in_group_with_multi_version_iaps(self):
		path = self.config.config_vars
		dhcp_page = self.LeftPanel.go_to_dhcp_page()
		dhcp_page.click_centralize_accordion()
		dhcp_page.delete_centralized_dhcp()
		self.take_s1_snapshot()
		dhcp_page.create_new_centralized_dhcp()
		dhcp_page.setting_centralize_name(path.centralized_dhcp_name)
		dhcp_page.set_centralize_vlan_id(path.vlan_number_value)
		dhcp_page.clicking_centralize_dhcp_relay()
		dhcp_page.set_helper_address_value(path.local_dhcp_dns_server_valid_2)
		dhcp_page.set_vlan_mask_value(self.config.config_vars.edit_Dhcp_Netmask)
		dhcp_page.set_vlan_ip_value(self.config.config_vars.dhcp_network_address)
		dhcp_page.select_option82_value('Alcatel')
		dhcp_page.click_ok()
		dhcp_page.browser.assert_element(dhcp_page.created_centralized_dhcp_scope,'created centralized dhcp scope is not present')
		self.take_s2_snapshot()
		dhcp_page.delete_centralized_dhcp()
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(0)
		self.assert_s1_s3_diff()
		self.clear()
		
	def test_ath_11251_edit_centralized_dhcp_scopes(self):
		path = self.config.config_vars
		dhcp_page = self.LeftPanel.go_to_dhcp_page()
		self.take_s1_snapshot()
		dhcp_page.click_centralize_accordion()
		dhcp_page.create_new_centralized_dhcp()
		dhcp_page.setting_centralize_name(path.distributed_dhcp_name)
		dhcp_page.set_centralize_vlan_id(path.vlan_number_value)
		dhcp_page.click_ok()
		dhcp_page.edit_centralized_dhcp_icon_click()
		dhcp_page.setting_centralize_name(path.centralized_dhcp_name)
		dhcp_page.set_centralize_vlan_id(path.edit_Dhcp_Vlan)
		dhcp_page.click_centralize_dhcp_relay(True)
		dhcp_page.set_helper_address_value(path.edit_dhcp_network_address)
		dhcp_page.set_vlan_ip_value(path.subnet_address)
		dhcp_page.set_vlan_mask_value(path.edit_Dhcp_Netmask)
		dhcp_page.click_ok()
		dhcp_page.edit_centralized_dhcp_icon_click()
		dhcp_page.click_centralize_dhcp_relay(False)
		dhcp_page.click_ok()
		dhcp_page.edit_centralized_dhcp_icon_click()
		dhcp_page.click_centralize_dhcp_relay(True)
		dhcp_page.set_helper_address_value(path.edit_dhcp_network_address)		
		dhcp_page.click_ok()		
		self.take_s2_snapshot()
		dhcp_page.delete_centralized_dhcp()
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(0)
		self.assert_s1_s3_diff()
		self.clear()
		
	def test_ath_11248_create_centralized_L3_Scope_3_and_low(self):
		dhcp_page = self.LeftPanel.go_to_dhcp_page()
		dhcp_page.click_centralize_accordion()
		dhcp_page.delete_centralize_dhcp_if_present()
		self.take_s1_snapshot()
		dhcp_page.assert_centralized_L3_scope_30()
		self.take_s2_snapshot()
		dhcp_page.delete_centralize_dhcp_if_present()
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(0)
		self.assert_s1_s3_diff()
		self.clear()
		
	def test_ath_11250_create_centralized_scope_as_dhcp_relay_disabled_in_group_with_multi_version_iaps(self):
		path = self.config.config_vars
		dhcp_page = self.LeftPanel.go_to_dhcp_page()
		self.take_s1_snapshot()
		dhcp_page.click_centralize_accordion()
		dhcp_page.create_new_centralized_dhcp()
		dhcp_page.setting_centralize_name(path.centralized_dhcp_name)
		dhcp_page.set_centralize_vlan_id(path.vlan_number_value)
		dhcp_page.click_ok()
		self.take_s2_snapshot()
		dhcp_page.assert_created_centralized_dhcp()
		dhcp_page.delete_centralized_dhcp()
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(0)
		self.assert_s1_s3_diff()
		self.clear()