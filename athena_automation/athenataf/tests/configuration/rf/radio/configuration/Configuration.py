import logging
logger = logging.getLogger('athenataf')

from athenataf.lib.functionality.test.ConfigurationTest import ConfigurationTest

class Configuration(ConfigurationTest):
	'''
		Test class for Configuration.
	'''
	def test_ath_8186_check_rf_config_override_flag(self):
		self.take_s1_snapshot()
		rf_page = self.LeftPanel.go_to_rf_page()
		rf_page.select_default_instant()
		rf_page.set_legacy_radio_parameter()
		self.take_s2_snapshot()
		rf_page.assert_detection_resolve_override_flag()
		rf_page.set_legacy_radio_parameter_default()
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(0)
		self.assert_s1_s3_diff()
		self.clear()
		
	def test_ath_11099_radio_config_edit_group_level(self):
		conf = self.config.config_vars
		rf_page = self.LeftPanel.go_to_rf_page()
		rf_page.open_radio_accordion()
		self.take_s1_snapshot()
		rf_page.set_legacy_only_24ghz(conf.legacy_only_enabled)
		rf_page.set_dropdown_11d_11h_24ghz(conf.band_802_enabled)
		rf_page.set_beacon_interval_24ghz(conf.new_beacon_interval_value)
		rf_page.set_interface_immunity_24ghz(conf.interface_immunity_5)
		rf_page.set_channel_switch_announce_24ghz(conf.new_channel_switch_announce_5ghz_value)
		rf_page.set_background_spectrum_24ghz(conf.new_background_spectrum_24ghz_value)
		rf_page.set_legacy_only_5ghz(conf.legacy_only_enabled)
		rf_page.set_dropdown_11d_11h_5ghz(conf.band_802_enabled)
		rf_page.set_beacon_interval_5ghz(conf.beacon_interval_value_200)
		rf_page.set_interface_immunity_5ghz(conf.interface_immunity_1)
		rf_page.set_channel_switch_announce_5ghz(conf.new_channel_switch_announce_5)
		rf_page.set_background_spectrum_5ghz(conf.new_background_spectrum_5ghz_value)
		rf_page.save_changes()
		rf_page.set_legacy_only_24ghz(conf.legacy_only_24ghz_value)
		rf_page.set_dropdown_11d_11h_24ghz(conf.band_802_disabled)
		rf_page.set_beacon_interval_24ghz(conf.beacon_interval_value_120)
		rf_page.set_interface_immunity_24ghz(conf.interface_immunity_24ghz_value)
		rf_page.set_channel_switch_announce_24ghz(conf.channel_switch_announce_24ghz_value)
		rf_page.set_background_spectrum_24ghz(conf.background_spectrum_24ghz_value)
		rf_page.save_changes()
		self.take_s2_snapshot()
		rf_page.set_2ghz_band_values_to_default()
		rf_page.set_5ghz_band_values_to_default()
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(0)
		self.assert_s1_s3_diff()
		self.clear()
		
	def test_ath_11103_single_radio_config(self):
		conf = self.config.config_vars
		rf_page = self.LeftPanel.go_to_rf_page()
		rf_page.open_radio_accordion()
		rf_page.set_2ghz_band_values_to_default()
		rf_page.set_5ghz_band_values_to_default()
		self.take_s1_snapshot()
		rf_page.set_beacon_interval_24ghz(conf.new_beacon_interval_value)
		rf_page.set_beacon_interval_5ghz(conf.beacon_interval_value_200)
		rf_page.set_channel_switch_announce_24ghz(conf.new_channel_switch_announce_5ghz_value)
		rf_page.set_channel_switch_announce_5ghz(conf.new_channel_switch_announce_5)
		rf_page.set_background_spectrum_24ghz(conf.new_background_spectrum_24ghz_value)
		rf_page.set_background_spectrum_5ghz(conf.new_background_spectrum_5ghz_value)
		rf_page.save_changes()
		self.take_s2_snapshot()
		rf_page.set_2ghz_band_values_to_default()
		rf_page.set_5ghz_band_values_to_default()
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(0)
		self.assert_s1_s3_diff()
		self.clear()
		
	def test_ath_11100_radio_config_vc_level(self):
		conf = self.config.config_vars
		rf_page = self.LeftPanel.go_to_rf_page()
		rf_page.select_default_instant()
		rf_page.open_radio_accordion()
		self.take_s1_snapshot()
		rf_page.set_legacy_only_24ghz(conf.legacy_only_enabled)
		rf_page.set_dropdown_11d_11h_24ghz(conf.band_802_enabled)
		rf_page.set_beacon_interval_24ghz(conf.new_beacon_interval_value)
		rf_page.set_interface_immunity_24ghz(conf.interface_immunity_5)
		rf_page.set_channel_switch_announce_24ghz(conf.new_channel_switch_announce_5ghz_value)
		rf_page.set_background_spectrum_24ghz(conf.new_background_spectrum_24ghz_value)
		rf_page.set_legacy_only_5ghz(conf.legacy_only_enabled)
		rf_page.set_dropdown_11d_11h_5ghz(conf.band_802_enabled)
		rf_page.set_beacon_interval_5ghz(conf.beacon_interval_value_200)
		rf_page.set_interface_immunity_5ghz(conf.interface_immunity_1)
		rf_page.set_channel_switch_announce_5ghz(conf.new_channel_switch_announce_5)
		rf_page.set_background_spectrum_5ghz(conf.new_background_spectrum_5ghz_value)
		rf_page.save_changes()
		rf_page.set_legacy_only_24ghz(conf.legacy_only_24ghz_value)
		rf_page.set_dropdown_11d_11h_24ghz(conf.band_802_disabled)
		rf_page.set_beacon_interval_24ghz(conf.beacon_interval_value_120)
		rf_page.set_interface_immunity_24ghz(conf.interface_immunity_24ghz_value)
		rf_page.set_channel_switch_announce_24ghz(conf.channel_switch_announce_24ghz_value)
		rf_page.set_background_spectrum_24ghz(conf.background_spectrum_24ghz_value)
		rf_page.save_changes()
		self.take_s2_snapshot()
		rf_page.assert_detection_resolve_override_flag()
		rf_page.set_legacy_radio_parameter_default()
		rf_page.set_2ghz_band_values_to_default()
		rf_page.set_5ghz_band_values_to_default()
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(0)
		self.assert_s1_s3_diff()
		self.clear()
		
	def test_ath_11101_radio_config_unprovisioned_iap(self):
		conf = self.config.config_vars
		device_mgmt = self.LeftPanel.go_to_device_management()
		device_mgmt.search_device_using_mac_address()
		device_mgmt.setting_device_as_unprovisioned()
		inner_left_panel = self.TopPanel.click_slider_icon()
		inner_left_panel.select_device()
		rf_page = self.LeftPanel.go_to_rf_page()
		rf_page.open_radio_accordion()
		self.take_s1_snapshot()
		rf_page.set_legacy_only_24ghz(conf.legacy_only_enabled)
		rf_page.set_dropdown_11d_11h_24ghz(conf.band_802_enabled)
		rf_page.set_beacon_interval_24ghz(conf.new_beacon_interval_value1)
		rf_page.set_interface_immunity_24ghz(conf.interface_immunity_1)
		rf_page.set_channel_switch_announce_24ghz(conf.new_channel_switch_announce_3)
		rf_page.set_background_spectrum_24ghz(conf.new_background_spectrum_24ghz_value)
		rf_page.set_legacy_only_5ghz(conf.legacy_only_enabled)
		rf_page.set_dropdown_11d_11h_5ghz(conf.band_802_enabled)
		rf_page.set_beacon_interval_5ghz(conf.sixty)
		rf_page.set_interface_immunity_5ghz(conf.interface_immunity_5)
		rf_page.set_channel_switch_announce_5ghz(conf.new_channel_switch_announce_5)
		rf_page.set_background_spectrum_5ghz(conf.new_background_spectrum_5ghz_value)
		rf_page.save_changes()
		self.take_s2_snapshot()
		rf_page.set_2ghz_band_values_to_default()
		rf_page.set_5ghz_band_values_to_default()
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(0)
		self.assert_s1_s3_diff()
		self.clear()
	
	def test_ath_11102_radio_config_swarm_level(self):
		conf = self.config.config_vars
		rf_page = self.LeftPanel.go_to_rf_page()
		rf_page.open_radio_accordion()
		self.take_s1_snapshot("show_radio_config")
		rf_page.set_legacy_only_24ghz(conf.legacy_only_5ghz_value)
		rf_page.set_dropdown_11d_11h_24ghz(conf.band_802_enabled)
		rf_page.set_beacon_interval_24ghz(conf.cm_calculating_interval_85)
		rf_page.set_interface_immunity_24ghz(conf.interface_immunity_5)
		rf_page.set_channel_switch_announce_24ghz(conf.announcement_count_8)
		rf_page.set_background_spectrum_24ghz(conf.new_background_spectrum_24ghz_value)
		
		rf_page.set_legacy_only_5ghz(conf.legacy_only_enabled)
		rf_page.set_dropdown_11d_11h_5ghz(conf.band_802_enabled)
		rf_page.set_beacon_interval_5ghz(conf.beacon_interval_450)
		rf_page.set_interface_immunity_5ghz(conf.one_cm_threshold_value)
		rf_page.set_channel_switch_announce_5ghz(conf.new_interface_immunity_24ghz_value)
		rf_page.set_background_spectrum_5ghz(conf.background_spectrum_5ghz_value)
		rf_page.save_changes()
		self.take_s2_snapshot("show_radio_config")
		rf_page.set_2ghz_band_values_to_default()
		rf_page.set_5ghz_band_values_to_default()
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(0)
		self.assert_s1_s3_diff()
		self.clear()
		