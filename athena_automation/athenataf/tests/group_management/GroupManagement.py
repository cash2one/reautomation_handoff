import logging
logger = logging.getLogger('athenataf')

from athenataf.lib.functionality.test.AthenaGUITestCase import AthenaGUITestCase
from athenataf.lib.functionality.common import DeviceLibrary
from athenataf.lib.functionality.test.GroupConfigurationTest import GroupConfigurationTest
import time

class GroupManagement(GroupConfigurationTest):
	'''
	Test class for group management.
	'''
	def test_ath_73_create_empty_group(self):
		inner_left_panel = self.TopPanel.click_slider_icon()
		self.take_s1_snapshot()
		if inner_left_panel.assert_group():
			if inner_left_panel.assert_sample_group_with_vc_present():
				manage_group_page = inner_left_panel.manage_group()
				manage_group_page.move_virtual_controller()
				inner_left_panel.manage_group()
				manage_group_page.delete_empty_group()
			elif inner_left_panel.assert_sample_group_without_vc_present():
				manage_group_page = inner_left_panel.manage_group()
				manage_group_page.delete_empty_group()
		create_group_page = inner_left_panel.add_group()
		create_group_page.create_empty_group()
		inner_left_panel.assert_group_exist()
		inner_left_panel.assert_group_with_no_vc()
		manage_group_page1 = inner_left_panel.manage_group()
		manage_group_page1.delete_empty_group()
		self.TopPanel.innerleft_panel_icon.click()
		self.take_s2_snapshot()
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(None)
		self.assert_s1_s3_diff()
		self.clear()
		
	def test_ath_72_create_group(self):
		inner_left_panel = self.TopPanel.click_slider_icon()
		if inner_left_panel.assert_group():
			if inner_left_panel.assert_sample_group_with_vc_present():
				manage_group_page = inner_left_panel.manage_group()
				manage_group_page.move_virtual_controller()
				inner_left_panel.manage_group()
				manage_group_page.delete_empty_group()
			elif inner_left_panel.assert_sample_group_without_vc_present():
				manage_group_page = inner_left_panel.manage_group()
				manage_group_page.delete_empty_group()
		self.take_s1_snapshot()
		create_group_page = inner_left_panel.add_group()
		create_group_page.create_group()
		inner_left_panel.assert_group_exist()
		# inner_left_panel.assert_group_with_selected_vc_present()
		manage_group_page1 = inner_left_panel.manage_group()
		manage_group_page1.move_virtual_controller()
		inner_left_panel.manage_group()
		manage_group_page1.delete_empty_group()
		self.connect_device()
		self.take_s2_snapshot()
		self.TopPanel.innerleft_panel_icon.click()
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(None)
		self.assert_s1_s3_diff()
		self.clear()
		
	def test_ath_76_create_group_from_manage(self):
		inner_left_panel = self.TopPanel.click_slider_icon()
		if inner_left_panel.assert_group():
			if inner_left_panel.assert_sample_group_with_vc_present():
				manage_group_page = inner_left_panel.manage_group()
				manage_group_page.move_virtual_controller()
				inner_left_panel.manage_group()
				manage_group_page.delete_empty_group()
			elif inner_left_panel.assert_sample_group_without_vc_present():
				manage_group_page = inner_left_panel.manage_group()
				manage_group_page.delete_empty_group()
		self.take_s1_snapshot()
		manage_group_page1 = inner_left_panel.manage_group()
		create_group_page = manage_group_page1.create_new_group_from_manage()
		create_group_page.create_group()
		inner_left_panel.assert_group_exist()
		inner_left_panel.manage_group()
		manage_group_page1.move_virtual_controller()
		inner_left_panel.manage_group()
		manage_group_page1.delete_empty_group()
		# self.connect_device()
		self.take_s2_snapshot()
		self.TopPanel.innerleft_panel_icon.click()
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(None)
		self.assert_s1_s3_diff()
		self.clear()
		
	def test_ath_74_delete_an_empty_group(self):
		inner_left_panel = self.TopPanel.click_slider_icon()
		if not inner_left_panel.assert_group():
			create_group_page = inner_left_panel.add_group()
			create_group_page.create_empty_group()
		self.take_s1_snapshot()
		manage_group_page = inner_left_panel.manage_group()
		manage_group_page.delete_empty_group()
		inner_left_panel.assert_group_not_exist()
		self.take_s2_snapshot()
		self.TopPanel.innerleft_panel_icon.click()
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(None)
		self.assert_s1_s3_diff()
		self.clear()
		
	def test_ath_75_delete_group_with_virtual_controller(self):
		inner_left_panel = self.TopPanel.click_slider_icon()
		if not inner_left_panel.assert_group():
			create_group_page = inner_left_panel.add_group()
			create_group_page.create_group()
		self.take_s1_snapshot()
		manage_group_page = inner_left_panel.manage_group()	
		manage_group_page.delete_empty_group()
		manage_group_page.assert_group_has_swarm()
		manage_group_page = inner_left_panel.manage_group()
		manage_group_page.move_virtual_controller()
		inner_left_panel.manage_group()
		manage_group_page.delete_empty_group()
		inner_left_panel.assert_group_not_exist()
		# self.connect_device()
		self.take_s2_snapshot()
		self.TopPanel.innerleft_panel_icon.click()
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(None)
		self.assert_s1_s3_diff()
		self.clear()
		
	def test_ath_78_create_multiple_groups(self):
		inner_left_panel = self.TopPanel.click_slider_icon()
		if inner_left_panel.assert_group():
			if inner_left_panel.assert_sample_group_with_vc_present():
				manage_group_page = inner_left_panel.manage_group()
				manage_group_page.move_virtual_controller()
				inner_left_panel.manage_group()
				manage_group_page.delete_empty_group()
			elif inner_left_panel.assert_sample_group_without_vc_present():
				manage_group_page = inner_left_panel.manage_group()
				manage_group_page.delete_empty_group()
		self.take_s1_snapshot()
		create_group_page = inner_left_panel.add_group()
		create_group_page.create_empty_group()
		inner_left_panel.add_group()
		create_group_page.create_multiple_groups()
		inner_left_panel.assert_group_exist()
		manage_group_page1 = inner_left_panel.manage_group()
		manage_group_page1.delete_empty_group()
		inner_left_panel.manage_group()
		manage_group_page1.move_virtual_controller1()
		inner_left_panel.manage_group()
		manage_group_page1.delete_empty_group1()
		inner_left_panel.assert_group_not_exist()
		# self.connect_device()
		self.take_s2_snapshot()
		self.TopPanel.innerleft_panel_icon.click()
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(None)
		self.assert_s1_s3_diff()
		self.clear()
		
	def test_ath_79_move_vc_between_groups(self):
		inner_left_panel = self.TopPanel.click_slider_icon()
		if inner_left_panel.assert_group():
			if inner_left_panel.assert_sample_group_with_vc_present():
				manage_group_page = inner_left_panel.manage_group()
				manage_group_page.move_virtual_controller()
				inner_left_panel.select_default_group()
				inner_left_panel = self.TopPanel.click_slider_icon()
				inner_left_panel.manage_group()
				manage_group_page.delete_empty_group()
			elif inner_left_panel.assert_sample_group_without_vc_present():
				inner_left_panel.select_default_group()
				inner_left_panel = self.TopPanel.click_slider_icon()
				manage_group_page = inner_left_panel.manage_group()
				manage_group_page.delete_empty_group()
		create_group_page = inner_left_panel.add_group()
		create_group_page.create_empty_group()
		inner_left_panel.add_group()
		create_group_page.create_multiple_groups()
		time.sleep(300)
		DeviceLibrary.reconnect("IAP_1")
		manage_group_page = inner_left_panel.manage_group()
		manage_group_page.move_virtual_controller2()
		time.sleep(300)
		DeviceLibrary.reconnect("IAP_1")
		inner_left_panel.manage_group()
		manage_group_page.delete_empty_group1()
		inner_left_panel.manage_group()
		manage_group_page.move_virtual_controller()
		time.sleep(300)
		DeviceLibrary.reconnect("IAP_1")
		inner_left_panel.manage_group()
		manage_group_page.delete_empty_group()
		inner_left_panel.assert_virtual_controller()
		self.TopPanel.innerleft_panel_icon.click()
		
	def test_ath_889_duplicate_groups(self):
		inner_left_panel = self.TopPanel.click_slider_icon()
		if inner_left_panel.assert_group():
			if inner_left_panel.assert_sample_group_with_vc_present():
				manage_group_page = inner_left_panel.manage_group()
				manage_group_page.move_virtual_controller()
				inner_left_panel.select_default_group()
				inner_left_panel = self.TopPanel.click_slider_icon()
				inner_left_panel.manage_group()
				manage_group_page.delete_empty_group()
			elif inner_left_panel.assert_sample_group_without_vc_present():
				inner_left_panel.select_default_group()
				inner_left_panel = self.TopPanel.click_slider_icon()
				manage_group_page = inner_left_panel.manage_group()
				manage_group_page.delete_empty_group()
		create_group_page = inner_left_panel.add_group()
		create_group_page.create_empty_group()
		inner_left_panel.add_group()
		create_group_page.create_empty_group()
		create_group_page.assert_duplicate_group_warning()
		manage_group_page = inner_left_panel.manage_group()
		manage_group_page.delete_empty_group()
		
	def test_ath_6703_delete_default_group(self):
		inner_left_panel = self.TopPanel.click_slider_icon()
		self.take_s1_snapshot()
		# inner_left_panel.add_group()
		# manage_group_page = inner_left_panel.manage_groups()
		manage_group_page = inner_left_panel.manage_group()
		manage_group_page.delete_default_group()
		manage_group_page.assert_default_group_does_not_delete()
		self.take_s2_snapshot()
		self.browser.refresh()
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(None)
		self.assert_s1_s3_diff()
		self.clear()
		
	def test_ath_6714_delete_current_working_group(self):
		inner_left_panel = self.TopPanel.click_slider_icon()
		self.take_s1_snapshot()
		create_group_page = inner_left_panel.add_group()
		create_group_page.create_empty_group()
		inner_left_panel.assert_group_exist()
		inner_left_panel.select_sample_group()
		self.TopPanel.click_slider_icon()
		# inner_left_panel.add_group()
		# manage_group_page = inner_left_panel.manage_groups()
		manage_group_page = inner_left_panel.manage_group()
		manage_group_page.delete_current_working_group()
		manage_group_page.assert_current_working_group_does_not_delete()
		self.take_s2_snapshot()
		self.browser.refresh()
		inner_left_panel = self.TopPanel.click_slider_icon()
		manage_group_page = inner_left_panel.manage_group()
		manage_group_page.delete_current_working_group()
		self.browser.refresh()
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(None)
		self.assert_s1_s3_diff()
		self.clear()

	def test_ath_6717_move_without_selecting_vc(self):
		inner_left_panel = self.TopPanel.click_slider_icon()
		self.take_s1_snapshot()
		create_group_page = inner_left_panel.add_group()
		create_group_page.create_empty_group()
		inner_left_panel.assert_group_exist()
		# inner_left_panel.add_group()
		# manage_group_page = inner_left_panel.manage_groups()
		manage_group_page = inner_left_panel.manage_group()
		manage_group_page.move_group_wihtout_selecting_vc()
		manage_group_page.assert_move_group_wihtout_selecting_vc()
		self.take_s2_snapshot()
		self.browser.refresh()
		inner_left_panel = self.TopPanel.click_slider_icon()
		manage_group_page = inner_left_panel.manage_group()
		manage_group_page.delete_current_working_group()
		self.browser.refresh()
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(None)
		self.assert_s1_s3_diff()
		self.clear()

	def test_ath_6716_delete_and_clone_disabled_for_all_group(self):
		inner_left_panel = self.TopPanel.click_slider_icon()
		self.take_s1_snapshot()
		manage_group_page = inner_left_panel.manage_group()
		manage_group_page.assert_delete_and_clone_disabled_for_all_group()
		self.browser.refresh()
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(None)
		self.assert_s1_s3_diff()
		self.clear()

	def test_ath_8199_navigation_all_groups(self):
		inner_left_panel = self.TopPanel.click_slider_icon()
		create_group_page = inner_left_panel.add_group()
		create_group_page.create_empty_group()
		inner_left_panel.assert_group_exist()
		inner_left_panel.select_sample_group()
		inner_left_panel.select_wireless_configuration_module()
		all_groups = inner_left_panel.click_all_groups_label()
		all_groups.assert_group_name_and_aps()
		self.browser.refresh()
		inner_left_panel = self.TopPanel.click_slider_icon()
		manage_group_page = inner_left_panel.manage_group()
		manage_group_page.delete_current_working_group()
		
	def test_ath_6709_create_groups_and_check_group_sorting(self):
		inner_left_panel = self.TopPanel.click_slider_icon()
		create_group_page = inner_left_panel.add_group()
		create_group_page.create_multiple_empty_groups(self.config.config_vars.group_i)
		create_group_page = inner_left_panel.add_group()
		create_group_page.create_multiple_empty_groups(self.config.config_vars.group_f)
		create_group_page = inner_left_panel.add_group()
		create_group_page.create_multiple_empty_groups(self.config.config_vars.group_a)
		create_group_page = inner_left_panel.add_group()
		create_group_page.create_multiple_empty_groups(self.config.config_vars.group_h)
		create_group_page = inner_left_panel.add_group()
		create_group_page.create_multiple_empty_groups(self.config.config_vars.group_d)
		create_group_page = inner_left_panel.add_group()
		create_group_page.create_multiple_empty_groups(self.config.config_vars.group_b)
		create_group_page = inner_left_panel.add_group()
		create_group_page.create_multiple_empty_groups(self.config.config_vars.group_g)
		create_group_page = inner_left_panel.add_group()
		create_group_page.create_multiple_empty_groups(self.config.config_vars.group_c)
		create_group_page = inner_left_panel.add_group()
		create_group_page.create_multiple_empty_groups(self.config.config_vars.group_j)
		create_group_page = inner_left_panel.add_group()
		create_group_page.create_multiple_empty_groups(self.config.config_vars.group_e)
		create_group_page.assert_group_sorting()
		manage_group_page=inner_left_panel.manage_group()
		manage_group_page.delete_empty_groups()

