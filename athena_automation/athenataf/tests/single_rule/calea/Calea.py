import logging
logger = logging.getLogger('athenataf')
from athenataf.lib.functionality.test.ConfigurationTest import ConfigurationTest

class Calea(ConfigurationTest):
	'''
	Test class for Iap wired networks testcases.
	'''

	def test_ath_8628_calea(self):
		self.NetworkPage.delete_network_if_present()
		self.take_s1_snapshot()
		basic_info = self.NetworkPage.create_new_network()
		vlan_obj = basic_info.employee_network_info()
		security = vlan_obj.use_vlan_defaults()
		access = security.assert_roaming_defaults(True,False)
		access.click_network_access()
		access.create_calea()
		access.assert_calea()
		access.finish_network_setup()
		self.NetworkPage.assert_new_network()
		self.take_s2_snapshot()
		edit_network_page = self.NetworkPage.edit_network()
		edit_network_page.delete_calea_rule()
		self.NetworkPage.delete_network_if_present()
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(0)
		self.assert_s1_s3_diff()
		self.clear()
		
	def test_ath_7839_edit_calea_to_access_control_rule_type(self):
		self.NetworkPage.delete_network_if_present()
		self.take_s1_snapshot()
		basic_info = self.NetworkPage.create_new_network()
		vlan_obj = basic_info.employee_network_info()
		security = vlan_obj.use_vlan_defaults()
		access = security.assert_roaming_defaults(True,False)
		access.click_network_access()
		access.create_calea()
		access.assert_calea()
		access.finish_network_setup()
		self.NetworkPage.assert_new_network()
		edit_network_page = self.NetworkPage.edit_network()
		edit_network_page.edit_calea_rule()
		self.NetworkPage.assert_new_network()
		self.take_s2_snapshot()
		edit_network_page = self.NetworkPage.edit_network()
		edit_network_page.delete_edited_calea_rule()
		self.NetworkPage.delete_network_if_present()
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(0)
		self.assert_s1_s3_diff()
		self.clear()
		
	def test_ath_8965_delete_calea(self):
		self.NetworkPage.delete_network_if_present()
		self.take_s1_snapshot()
		basic_info = self.NetworkPage.create_new_network()
		vlan_obj = basic_info.employee_network_info()
		security = vlan_obj.use_vlan_defaults()
		access = security.assert_roaming_defaults(True,False)
		access.click_network_access()
		access.create_calea()
		access.assert_calea()
		access.finish_network_setup()
		self.NetworkPage.assert_new_network()
		self.take_s2_snapshot()
		edit_network_page = self.NetworkPage.edit_network()
		edit_network_page.delete_calea_rule()
		self.NetworkPage.delete_network_if_present()
		self.take_s3_snapshot()
		self.assert_s1_s2_diff(0)
		self.assert_s1_s3_diff()
		self.clear()